app.js:


import React, { Component } from 'react';
import './App.css';
import Persons from '../component/person/person';
import Head from '../component/header/header';
import Button from '../component/Button/button';
import { Hoc } from '../Hoc/hoc';


class App extends Component {
  state = {
    employee: [
      {
        name: "partha", key: 1, age: 21, company: "photon", branch: "xyz"
      }, {
        name: "adarsh", key: 2, age: 25, company: "photon", branch: "xyz"
      }, {
        name: "nirmal", key: 5, age: 56, company: "photon", branch: "xyz"
      }],
    order: "asc",
    showContent: true,
    headerContent:"Employee Details"
  };



  change_state_value = (a, b) => this.setState({
    employee: [
      { name: a, key: 4, age: 20, company: "photon", branch: "xyz" },
      { name: b, key: 6, age: 21, company: "photon", branch: "xyz" },
      { name: "nirmal pandi", key: 7, age: 22, company: "photon", branch: "xyz" }]
  });



  sortingByName = (selecting) => {
    const { employee, order } = this.state;
    const value = (order === 'asc') ? [1, -1, 'desc'] : [-1, 1, 'asc'];

    employee.sort((x, y) => {
      const a = (selecting === "name") ? x.name : x.age;
      const b = (selecting === "name") ? y.name : y.age;
      return b > a ? value[0] : b < a ? value[1] : 0;
    });

    this.setState({ employee, order: value[2] });
  }



  twoWayBinding = (index, event) => {
    const { employee } = this.state;
    employee[index].name = event.target.value;
    this.setState({
      employee
    });
  }


  toggleShowHide = () => {
    const data = this.state.showContent;
    this.setState({ showContent: !data })
  }

  componentDidMount()
  {
    this.inputElement.focus();
  }


  render() {
    return (
      <div className="App">
        <Head headerContent={this.state.headerContent} />
        <Hoc>
          <Button state={this.change_state_value} sorting={this.sortingByName}
            Showcontent={this.state.showContent} Toggle={this.toggleShowHide} />
          {this.state.showContent ?
            <div className="middle-content">
              <Persons employee={this.state.employee} binding={this.twoWayBinding} />
            </div> : null
          }
        </Hoc>
        {this.state.showContent ?
        <input type="button" value="submit" className="submit"
          ref={(n) => { this.inputElement = n; }}>
        </input> : null
        }
      </div>

    );
  }
}


export default App;


header.js:

import React, { Component } from 'react';
import './header.css';
import PropTypes from 'prop-types';


export class header extends Component {
    render()
    {
    return (<header>  {this.props.headerContent}</header>);
    }
};
header.propTypes = {
    headerContent: PropTypes.string,
  };
  export default header;


button.js:


import React from 'react';
import button from './button.css';


const Button = (props) => {
    return (
        <div>
            <button className="Button" onClick={props.state.bind(this, "parthasarathy", "adarsh kumar")} >change state value</button>
            <button className="Button" onClick={props.sorting.bind(this, "name")} >Sort Name</button>
            <button className="Button" onClick={props.sorting.bind(this, "age")} >Sort age</button>
            {props.Showcontent ? <button className="Button" onClick={props.Toggle} >hide content</button> : ""}
            {props.Showcontent === false ? <button className="showButton" onClick={props.Toggle} >show content</button> : null}
        </div>
    );
}

export default Button;


person.js:


import React from 'react';
import { PersonFunction } from './personDisplay/personDisplay';
const Persons = (props) => {
    const { employee, binding } = props;
    return employee.map((n, index) => {
        return (<PersonFunction {...n} click={binding.bind(this, index)} />);
    });
}
export default Persons;


persondisplay:

import React from 'react';
import './personDisplay.css';



export const PersonFunction = (propss) => {
    const { name, age, ...args } = propss;
    const { company } = args;
    // const a = Math.random();            error state
    // console.log(a);
    // if (a > 0.9) {
    //     throw new Error("error");
    // }
    return (

        <div>
            <p className="new">  Employee {name} and Employee age {age} - {company}</p>
            <input type="text"
          
            className="textBox" 
            onChange={propss.click} />
        </div>

    );
}



hoc.js:



const Hoc = (props) =>
{
    return (props.children);
}
export {Hoc};

index.js:

import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './container/App';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(<App />, document.getElementById('root'));
registerServiceWorker();
